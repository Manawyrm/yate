[general]
; This section sets global variables of the implementation

; debug: int: OpenH323 debug level
;debug=0

; dumpcodecs: int: Debug level to dump registered OpenH323 codecs, 0 disables
;dumpcodecs=0

; vendor: string: Vendor name
;vendor=Null Team

; product: string: Product name
;product=YATE

; major: int: Major version number
;major=0

; minor: int: Minor version number
;minor=1

; build: int: Build number
;build=1

; status: keyword: Code status: alpha, beta or release
;status=alpha

; Use an external rtp module instead of the native OpenH323 RTP stack, which is
; very cpu intensive. The no external rtp can be found it will fallback to the
; native stack. The only external rtp now is oRTP (see ortpchan module).
; external_rtp: bool: default: no
;external_rtp=no

; Perform pass-trough RTP forwarding if allowed from routing
; passtrough_rtp: bool: default: no
;passtrough_rtp=no


[codecs]
; This section allows to individually enable or disable the codecs
; For all but the default setting you can specify the value "fake" so that
; it will try to declare the capability even if it's no codec available

; default: bool: Enable all unlisted codecs by default
;default=enable

; mulaw: bool: Companded-only G711 mu-law (G.711-uLaw-64k)
;mulaw=default

; alaw: bool: Companded-only G711 a-law (G.711-ALaw-64k)
;alaw=default

; gsm: bool: European GSM 06.10 (GSM-06.10)
;gsm=default

; msgsm: bool: Microsoft's proprietary verion of GSM (MS-GSM)
;msgsm=default

; speex: bool: Speex narrow (SpeexNarrow)
;speex=default

; lpc10: bool: Linear Prediction Codec (LPC-10)
;lpc10=default

; ilbc: bool: Internet Low Bandwidth Codec (iLBC)
;ilbc=default

; slin: bool: Signed Linear 16-bit uncompressed (PCM-16)
;slin=default

; g723: bool: ITU G.723 all variations (G.723)
;g723=default

; g726: bool: ITU G.726 all variations (G.726)
;g726=default

; g728: bool: ITU G.728 all variations (G.728)
;g728=default

; g729: bool: ITU G.729 all variations (G.729)
;g729=default


[ep]
; Control the endpoint operation of the module

; ep: bool: True if you want to activate the h323 endpoint
ep = true

; alias: string: The alias used by h323 module to connect to gatekeeper
alias = yate

; ident: string: Sets the hostname part of the outgoing e.164 (numeric) aliases
ident = yate

; maxconns: int: Maximum number of simultaneous connections (0 = no limit). 
;maxconns = 0

; faststart: bool: Enable Fast Start mode (offer media channels early)
;faststart=false

; h245tunneling: bool: Enable H.245 tunneling mode
;h245tunneling=false

; h245insetup: bool: Enable H.245 establishment early in call setup message
; Note that this setting may conflict with faststart so don't enable both
;h245insetup=false

; dtmfinband: bool: Wheter to decode inband DTMF (CPU intensive)
;dtmfinband = false

; silencedetect: keyword: Silence detection algorithm: none, fixed, adaptive
;silencedetect = none

; gkclient: bool: If h323 module endpoint should register to a gatekeeper
gkclient = false

; password: string: Password for h.235 authentification
;password = 1234

; gkip: ipaddress: Set the reported ip aaddress of the gatekeeper
;gkip = 10.10.10.10

; gkname: string: Set the name of the gatekeeper
;gkname = gigi

; How the gatekeeper is located
; If gkclient is true the endpoint will try first to find the gatekeeper by
; using gkip; then, if gkip is unset or is not corect, will try gkname and
; then will try to brodcast in the network.


[gk]
; If server is true the gatekeeper of yate will start. You must understand that
; the H323EndPoint and H323GateKeeper share the calls. So you can make a call
; to a registered endpoint of this gatekeeper even if in the [ep] section 
; you haven't register the local H323EndPoint to the local H323Gatekeeper. In
; fact is not recomanded to register the local EndPoint to the local GateKeeper.
; The local H323EndPoint is used as proxy for calls to local non h323 
; destinations. If you wanna call let's say tone/dial from a registered 
; endpoint to the local gatekeeper, you must make a route in regexroute (or 
; whatever you use) and then just dial the number.
; If you wanna call a registered endpoint you must use now as a module register 
; since is the only module who can record prefixes right now.
server=false

; You must define the binding interfaces. Right now the multi hosted boxes don't; work very well because OpenH323 mechanism, but we will fix that if someone
; have any problem.

interface1=10.0.0.1


[incoming]
; This section sets defaults for the incoming H.323 calls

; context: string: Input context
context=default

; maxqueue: int: Maximum length of the routing queue
; Normaly you will like to have this setup to a certain value so someone can't
; do a DoS attack over your server.
;maxqueue=5

; called: string: Default number to call
called=8989989
